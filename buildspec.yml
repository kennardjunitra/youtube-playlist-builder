version: 0.2

phases:
  pre_build:
    commands:
      - set -euo pipefail
      - echo "== Env =="
      - echo "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-NOT_SET}"
      - echo "REPOSITORY_URI=${REPOSITORY_URI:-NOT_SET}"
      - '[ -n "${AWS_DEFAULT_REGION:-}" ] || { echo "ERROR: AWS_DEFAULT_REGION not set"; exit 1; }'
      - '[ -n "${REPOSITORY_URI:-}" ] || { echo "ERROR: REPOSITORY_URI not set"; exit 1; }'
      - echo "== Parse registry/repo =="
      - REGISTRY=$(echo "$REPOSITORY_URI" | cut -d'/' -f1)
      - REPO_NAME=$(echo "$REPOSITORY_URI" | cut -d'/' -f2-)
      - echo "Registry=$REGISTRY"
      - echo "Repo=$REPO_NAME"
      - echo "== Login to ECR =="
      - aws ecr get-login-password --region "$AWS_DEFAULT_REGION" | docker login --username AWS --password-stdin "$REGISTRY"
      - echo "== Ensure ECR repo exists =="
      - aws ecr describe-repositories --repository-names "$REPO_NAME" >/dev/null 2>&1 || \
        aws ecr create-repository --repository-name "$REPO_NAME" \
          --image-tag-mutability IMMUTABLE --image-scanning-configuration scanOnPush=true
      - echo "== Defaults for Dockerfile/context =="
      - DF="${DF:-Dockerfile}"
      - BUILDCTX="${BUILDCTX:-.}"
  build:
    commands:
      - echo "== Build =="
      - echo "docker build -f ${DF} -t ${REPOSITORY_URI}:${IMAGE_TAG} ${BUILDCTX}"
      - docker build -f "${DF}" -t "${REPOSITORY_URI}:${IMAGE_TAG}" "${BUILDCTX}"
  post_build:
    commands:
      - echo "== Push =="
      - docker push "${REPOSITORY_URI}:${IMAGE_TAG}"
      - printf '{"ImageURI":"%s"}\n' "${REPOSITORY_URI}:${IMAGE_TAG}" > imageDetail.json

artifacts:
  files:
    - imageDetail.json
