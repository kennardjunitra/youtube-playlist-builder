version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "lambda-playlist-builder"
    IMAGE_TAG: "v${CODEBUILD_RESOLVED_SOURCE_VERSION}"   # or use ${CODEBUILD_BUILD_NUMBER}
    AWS_DEFAULT_REGION: "ap-southeast-1"
  # optional: enable BuildKit for faster builds
  # exported-variables: [IMAGE_URI]

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - ECR_URI=${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ECR_URI}
      - echo "Resolved ECR: ${ECR_URI}/${IMAGE_REPO_NAME}"
  build:
    commands:
      - echo Build started on `date`
      - docker build -t ${IMAGE_REPO_NAME}:${IMAGE_TAG} .
      - docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${ECR_URI}/${IMAGE_REPO_NAME}:${IMAGE_TAG}
  post_build:
    commands:
      - echo Pushing image...
      - docker push ${ECR_URI}/${IMAGE_REPO_NAME}:${IMAGE_TAG}
      - IMAGE_URI=${ECR_URI}/${IMAGE_REPO_NAME}:${IMAGE_TAG}
      - echo "Image pushed: ${IMAGE_URI}"
      # (optional) write an artifact file Lambda/CI can read
      - printf '{"ImageURI":"%s"}' "${IMAGE_URI}" > imageDetail.json
artifacts:
  files:
    - imageDetail.json
